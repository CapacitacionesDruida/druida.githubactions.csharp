name: Build

on:
  workflow_call:
    inputs:
      build-artifacts:
        type: boolean
        required: true
        default: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      name: Checkout code

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-


    - name: Install .NET General
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.0-rc.2.23479.6'
    
    # - name: Install last .Net 8 otnet-sdk-8.0.100-rc.2.23502.2
    #   run: |
    #       curl -Lo dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/9144f37e-b370-41ee-a86f-2d2a69251652/bc1d544112ec134184a5aec7f7a1eaf9/dotnet-sdk-8.0.100-rc.2.23502.2-linux-x64.tar.gz
    #       mkdir -p $HOME/dotnet && tar zxf dotnet-sdk-8.0.100-rc.2.23502.2-linux-x64.tar.gz -C $HOME/dotnet          
    #       export DOTNET_ROOT=$HOME/dotnet
    #       export PATH=$PATH:$HOME/dotnet
    #       dotnet --list-sdks

    - name: Restore solution
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Test solution
      run: dotnet test --no-build --configuration Release --filter "FullyQualifiedName!~AcceptanceTests"

    - name: Publish website
      if: ${{ inputs.build-artifacts == true }}
      run: |
        dotnet publish --configuration Release --runtime win-x86 --self-contained --output ./publish
        cd publish
        zip -r ./publish.zip .
      working-directory: ./src/Web/

    - name: Upload website artifact (website)
      if: ${{ inputs.build-artifacts == true }}
      uses: actions/upload-artifact@v3
      with:
        name: website
        path: ./src/Web/publish/publish.zip
        if-no-files-found: error    
    
    - name: Create EF Core migrations bundle - new tool-manifest
      if: ${{ inputs.build-artifacts == true }}
      run: dotnet new tool-manifest --force
      env:
        SkipNSwag: True

    - name: Create EF Core migrations bundle - install dotnet-ef
      if: ${{ inputs.build-artifacts == true }}
      run: dotnet tool install --global dotnet-ef --version 8.0.0-rc.2.23480.1        
      env:
        SkipNSwag: True

    - name: Create EF Core migrations bundle - create migrations
      if: ${{ inputs.build-artifacts == true }}
      run: dotnet ef migrations bundle --configuration Release -p ./src/Infrastructure/ -s ./src/Web/ -o efbundle.exe
        zip -r ./efbundle.zip efbundle.exe
      env:
        SkipNSwag: True

    - name: Create EF Core migrations bundle - zip migrations
      if: ${{ inputs.build-artifacts == true }}
      run: zip -r ./efbundle.zip efbundle.exe
      env:
        SkipNSwag: True

    - name: Upload EF Core migrations bundle artifact (efbundle)
      if: ${{ inputs.build-artifacts == true }}
      uses: actions/upload-artifact@v3
      with:
        name: efbundle
        path: ./efbundle.zip
        if-no-files-found: error
